// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_model.proto

package com.vearch.grpc.entity;

/**
 * Protobuf type {@code Vector}
 */
public final class Vector extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:Vector)
    VectorOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Vector.newBuilder() to construct.
  private Vector(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Vector() {
    feature_ = emptyFloatList();
    source_ = "";
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new Vector();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Vector(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 13: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              feature_ = newFloatList();
              mutable_bitField0_ |= 0x00000001;
            }
            feature_.addFloat(input.readFloat());
            break;
          }
          case 10: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
              feature_ = newFloatList();
              mutable_bitField0_ |= 0x00000001;
            }
            while (input.getBytesUntilLimit() > 0) {
              feature_.addFloat(input.readFloat());
            }
            input.popLimit(limit);
            break;
          }
          case 18: {
            String s = input.readStringRequireUtf8();

            source_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        feature_.makeImmutable(); // C
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return DataModel.internal_static_Vector_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return DataModel.internal_static_Vector_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            Vector.class, Vector.Builder.class);
  }

  public static final int FEATURE_FIELD_NUMBER = 1;
  private com.google.protobuf.Internal.FloatList feature_;
  /**
   * <code>repeated float feature = 1 [packed = true];</code>
   * @return A list containing the feature.
   */
  @Override
  public java.util.List<Float>
      getFeatureList() {
    return feature_;
  }
  /**
   * <code>repeated float feature = 1 [packed = true];</code>
   * @return The count of feature.
   */
  public int getFeatureCount() {
    return feature_.size();
  }
  /**
   * <code>repeated float feature = 1 [packed = true];</code>
   * @param index The index of the element to return.
   * @return The feature at the given index.
   */
  public float getFeature(int index) {
    return feature_.getFloat(index);
  }
  private int featureMemoizedSerializedSize = -1;

  public static final int SOURCE_FIELD_NUMBER = 2;
  private volatile Object source_;
  /**
   * <code>string source = 2;</code>
   * @return The source.
   */
  @Override
  public String getSource() {
    Object ref = source_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      source_ = s;
      return s;
    }
  }
  /**
   * <code>string source = 2;</code>
   * @return The bytes for source.
   */
  @Override
  public com.google.protobuf.ByteString
      getSourceBytes() {
    Object ref = source_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      source_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (getFeatureList().size() > 0) {
      output.writeUInt32NoTag(10);
      output.writeUInt32NoTag(featureMemoizedSerializedSize);
    }
    for (int i = 0; i < feature_.size(); i++) {
      output.writeFloatNoTag(feature_.getFloat(i));
    }
    if (!getSourceBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, source_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      dataSize = 4 * getFeatureList().size();
      size += dataSize;
      if (!getFeatureList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      featureMemoizedSerializedSize = dataSize;
    }
    if (!getSourceBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, source_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof Vector)) {
      return super.equals(obj);
    }
    Vector other = (Vector) obj;

    if (!getFeatureList()
        .equals(other.getFeatureList())) return false;
    if (!getSource()
        .equals(other.getSource())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getFeatureCount() > 0) {
      hash = (37 * hash) + FEATURE_FIELD_NUMBER;
      hash = (53 * hash) + getFeatureList().hashCode();
    }
    hash = (37 * hash) + SOURCE_FIELD_NUMBER;
    hash = (53 * hash) + getSource().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static Vector parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Vector parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Vector parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Vector parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Vector parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Vector parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Vector parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Vector parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static Vector parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static Vector parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static Vector parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Vector parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(Vector prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code Vector}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:Vector)
      VectorOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DataModel.internal_static_Vector_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DataModel.internal_static_Vector_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Vector.class, Vector.Builder.class);
    }

    // Construct using com.vearch.grpc.entity.Vector.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      feature_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000001);
      source_ = "";

      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return DataModel.internal_static_Vector_descriptor;
    }

    @Override
    public Vector getDefaultInstanceForType() {
      return Vector.getDefaultInstance();
    }

    @Override
    public Vector build() {
      Vector result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public Vector buildPartial() {
      Vector result = new Vector(this);
      int from_bitField0_ = bitField0_;
      if (((bitField0_ & 0x00000001) != 0)) {
        feature_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.feature_ = feature_;
      result.source_ = source_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof Vector) {
        return mergeFrom((Vector)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(Vector other) {
      if (other == Vector.getDefaultInstance()) return this;
      if (!other.feature_.isEmpty()) {
        if (feature_.isEmpty()) {
          feature_ = other.feature_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureFeatureIsMutable();
          feature_.addAll(other.feature_);
        }
        onChanged();
      }
      if (!other.getSource().isEmpty()) {
        source_ = other.source_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Vector parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (Vector) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.Internal.FloatList feature_ = emptyFloatList();
    private void ensureFeatureIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        feature_ = mutableCopy(feature_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <code>repeated float feature = 1 [packed = true];</code>
     * @return A list containing the feature.
     */
    public java.util.List<Float>
        getFeatureList() {
      return ((bitField0_ & 0x00000001) != 0) ?
               java.util.Collections.unmodifiableList(feature_) : feature_;
    }
    /**
     * <code>repeated float feature = 1 [packed = true];</code>
     * @return The count of feature.
     */
    public int getFeatureCount() {
      return feature_.size();
    }
    /**
     * <code>repeated float feature = 1 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The feature at the given index.
     */
    public float getFeature(int index) {
      return feature_.getFloat(index);
    }
    /**
     * <code>repeated float feature = 1 [packed = true];</code>
     * @param index The index to set the value at.
     * @param value The feature to set.
     * @return This builder for chaining.
     */
    public Builder setFeature(
        int index, float value) {
      ensureFeatureIsMutable();
      feature_.setFloat(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float feature = 1 [packed = true];</code>
     * @param value The feature to add.
     * @return This builder for chaining.
     */
    public Builder addFeature(float value) {
      ensureFeatureIsMutable();
      feature_.addFloat(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float feature = 1 [packed = true];</code>
     * @param values The feature to add.
     * @return This builder for chaining.
     */
    public Builder addAllFeature(
        Iterable<? extends Float> values) {
      ensureFeatureIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, feature_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float feature = 1 [packed = true];</code>
     * @return This builder for chaining.
     */
    public Builder clearFeature() {
      feature_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    private Object source_ = "";
    /**
     * <code>string source = 2;</code>
     * @return The source.
     */
    public String getSource() {
      Object ref = source_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        source_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string source = 2;</code>
     * @return The bytes for source.
     */
    public com.google.protobuf.ByteString
        getSourceBytes() {
      Object ref = source_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        source_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string source = 2;</code>
     * @param value The source to set.
     * @return This builder for chaining.
     */
    public Builder setSource(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      source_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string source = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearSource() {

      source_ = getDefaultInstance().getSource();
      onChanged();
      return this;
    }
    /**
     * <code>string source = 2;</code>
     * @param value The bytes for source to set.
     * @return This builder for chaining.
     */
    public Builder setSourceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      source_ = value;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:Vector)
  }

  // @@protoc_insertion_point(class_scope:Vector)
  private static final Vector DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new Vector();
  }

  public static Vector getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Vector>
      PARSER = new com.google.protobuf.AbstractParser<Vector>() {
    @Override
    public Vector parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Vector(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Vector> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<Vector> getParserForType() {
    return PARSER;
  }

  @Override
  public Vector getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

